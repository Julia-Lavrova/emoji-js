(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["emoji-img-converter"] = factory();
	else
		root["emoji-img-converter"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var noExtra = exports.noExtra = function noExtra(str) {
  return str.replace(/\ufe0f|\u200d/gm, '');
};

var toSurrogatePairs = exports.toSurrogatePairs = function toSurrogatePairs(emojiItem) {
  var parsePairs = emojiItem.split('').reduce(function (accumulator, currentValue) {
    return accumulator + '\\u' + ('000' + currentValue.charCodeAt(0).toString(16)).substr(-4);
  }, '');

  return parsePairs;
};

var toCodePoint = exports.toCodePoint = function toCodePoint(t) {
  var n = [];
  var r = 0;
  var o = 0;
  for (var h = 0; h < t.length; h += 1) {
    r = t.charCodeAt(h);
    if (o) {
      n.push((65536 + (o - 55296 << 10) + (r - 56320)).toString(16)); // eslint-disable-line no-bitwise, max-len
      o = 0;
    } else if (r >= 55296 && r <= 56319) {
      o = r;
    } else {
      n.push(r.toString(16));
    }
  }
  return n.join('-');
};

var parseEmoji = exports.parseEmoji = function parseEmoji(txt) {
  var emojis = '🖤,🥂,🦅,🦎,🤣,🥀,🤙🏿,🤙🏾,🤙🏽,🤙🏼,🤙🏻,🤙,🤵🏿,🤵🏾,🤵🏽,🤵🏼,🤵,🥃,⚜,🤦🏿♀️,🤦🏾♀️,🤦🏽‍♀️,🤦🏼♀️,🤦♀️,🦐,🦑,🤤,🦋,👩‍❤️‍💋‍👩,👩‍👩‍👧‍👧,👩‍👩‍👧‍👦,👩‍👩‍👦‍👦,👨‍❤️‍💋‍👨,👨‍👩‍👧‍👧,👨‍👩‍👧‍👦,👨‍👩‍👦‍👦,👨‍👨‍👧‍👧,👨‍👨‍👧‍👦,👨‍👨‍👦‍👦,👩‍❤️‍👩,👩‍👩‍👧,👩‍👩‍👦,👩‍👧‍👧,👩‍👧‍👦,👩‍👦‍👦,👨‍❤️‍👨,👨‍👩‍👧,👨‍👨‍👧,👨‍👨‍👦,👨‍👧‍👧,👨‍👧‍👦,👨‍👦‍👦,👩‍👧,👩‍👦,👨‍👧,👨‍👦,😂,❤️,♥️,😍,😭,😊,😒,😘,💕,☺️,😩,👌🏿,👌🏾,👌🏽,👌🏼,👌🏻,👌,😔,😏,😁,♻️,😉,👍🏿,👍🏾,👍🏽,👍🏼,👍🏻,👍,🙏🏿,🙏🏾,🙏🏽,🙏🏼,🙏🏻,🙏,😌,🎶,😳,🙌🏿,🙌🏾,🙌🏽,🙌🏼,🙌🏻,🙌,🙈,😢,😎,✌🏿,✌🏾,✌🏽,✌🏼,✌🏻,✌️,👀,😅,✨,😴,😄,💜,💔,💯,😑,💖,💙,😕,💁🏿‍♂️,💁🏾‍♂️,💁🏽‍♂️,💁🏼‍♂️,💁🏻‍♂️,💁‍♂️,💁🏿,💁🏾,💁🏽,💁🏼,💁🏻,💁,😜,😞,😋,😐,😪,👏🏿,👏🏾,👏🏽,👏🏼,👏🏻,👏,💘,💗,💞,⬅️,🙊,✋🏿,✋🏾,✋🏽,✋🏼,✋🏻,✋,💋,👉🏿,👉🏾,👉🏽,👉🏼,👉🏻,👉,🌸,😱,😈,🔥,😡,😃,🎉,👊🏿,👊🏾,👊🏽,👊🏼,👊🏻,👊,😫,📷,🌹,😝,💪🏿,💪🏾,💪🏽,💪🏼,💪🏻,💪,💀,☀️,💛,😤,🌚,😆,😓,👈🏿,👈🏾,👈🏽,👈🏼,👈🏻,👈,✔️,😻,😀,😷,💚,👋🏿,👋🏾,👋🏽,👋🏼,👋🏻,👋,😣,💓,▶️,👑,😚,😛,😥,😇,🎧,✅,😖,➡️,😠,😬,🌟,🔫,🙋🏿‍♂️,🙋🏾‍♂️,🙋🏽‍♂️,🙋🏼‍♂️,🙋🏻‍♂️,🙋‍♂️,🙋🏿,🙋🏾,🙋🏽,🙋🏼,🙋🏻,🙋,👎🏿,👎🏾,👎🏽,👎🏼,👎🏻,👎,1️⃣,💃🏿,💃🏾,💃🏽,💃🏼,💃🏻,💃,🎵,😶,2️⃣,💫,✊🏿,✊🏾,✊🏽,✊🏼,✊🏻,✊,👇🏿,👇🏾,👇🏽,👇🏼,👇🏻,👇,🔴,🙅🏿‍♂️,🙅🏾‍♂️,🙅🏽‍♂️,🙅🏼‍♂️,🙅🏻‍♂️,🙅‍♂️,🙅🏿,🙅🏾,🙅🏽,🙅🏼,🙅🏻,🙅,💥,↪️,↩️,©️,💭,👅,💩,😰,💎,🙆🏿‍♂️,🙆🏾‍♂️,🙆🏽‍♂️,🙆🏼‍♂️,🙆🏻‍♂️,🙆‍♂️,🙆🏿,🙆🏾,🙆🏽,🙆🏼,🙆🏻,🙆,🍕,😹,🌞,🍃,💦,🐧,💤,🚶🏿‍♀️,🚶🏾‍♀️,🚶🏽‍♀️,🚶🏼‍♀️,🚶🏻‍♀️,🚶‍♀️,🚶🏿,🚶🏾,🚶🏽,🚶🏼,🚶🏻,🚶,✈️,🎈,⭐️,🎀,☑️,😟,🔞,😨,🍀,🌺,🎤,👐🏿,👐🏾,👐🏽,👐🏼,👐🏻,👐,👻,◀️,🌴,‼️,💅🏿,💅🏾,💅🏽,💅🏼,💅🏻,💅,❌,👽,🙇🏿‍♀️,🙇🏾‍♀️,🙇🏽‍♀️,🙇🏼‍♀️,🙇🏻‍♀️,🙇‍♀️,🙇🏿,🙇🏾,🙇🏽,🙇🏼,🙇🏻,🙇,☁️,⚽️,👼🏿,👼🏾,👼🏽,👼🏼,👼🏻,👼,👯‍♂️,👯,❗️,❄️,☝🏿,☝🏾,☝🏽,☝🏼,☝🏻,☝️,☝,😙,🌈,🌙,💟,💝,🎁,🍻,😧,🌍,🎥,⚓️,⚡️,♣️,✖️,🏃🏿‍♀️,🏃🏾‍♀️,🏃🏽‍♀️,🏃🏼‍♀️,🏃🏻‍♀️,🏃‍♀️,🏃🏿,🏃🏾,🏃🏽,🏃🏼,🏃🏻,🏃,🌻,🌎,💐,🐶,💰,🌿,👫,🍂,🌷,🎂,🐱,☕️,😵,👆🏿,👆🏾,👆🏽,👆🏼,👆🏻,👆,😮,😯,🏀,🎄,💍,🌝,😲,👭,💸,💏,😿,🙉,💨,🌵,♨️,☎️,🍁,👸🏿,👸🏾,👸🏽,👸🏼,👸🏻,👸,💆🏿‍♂️,💆🏾‍♂️,💆🏽‍♂️,💆🏼‍♂️,💆🏻‍♂️,💆‍♂️,💆🏿,💆🏾,💆🏽,💆🏼,💆🏻,💆,💌,🏆,🙍🏿‍♂️,🙍🏾‍♂️,🙍🏽‍♂️,🙍🏼‍♂️,🙍🏻‍♂️,🙍‍♂️,🙍🏿,🙍🏾,🙍🏽,🙍🏼,🙍🏻,🙍,🇺🇸,🎊,🌼,🔪,👄,🍟,🍩,😦,🌊,💣,🆗,🌀,🚀,☔️,💑,🍭,🎬,🐷,👿,🐝,😽,💢,🎼,🎅🏿,🎅🏾,🎅🏽,🎅🏼,🎅🏻,🎅,🌏,🏈,🎸,♦️,🐼,💬,🍓,😼,🍌,🍉,⛄️,😸,♠️,🔝,🍆,🔮,🍴,📲,📱,⛅️,⚠️,🙀,🔸,👶🏿,👶🏾,👶🏽,👶🏼,👶🏻,👶,🐾,👣,🍺,🍷,⭕️,📹,🐰,🍹,🚬,👾,🍑,🐍,🐢,🍒,😗,🐸,🌌,🚨,🐣,📕,🍬,🍔,🐻,🐯,🚗,⏩,🍦,🍍,🌾,💉,🚮,🍫,▪️,📺,💊,🐙,🎃,🍇,😺,💿,🍸,🍰,🎮,™️,⬇️,🚫,💄,🐳,📝,®️,🍪,🐬,⚙,♥,❤,🔊,👨🏿,👨🏾,👨🏽,👨🏼,👨🏻,👨,🐥,🐒,3️⃣,📚,👹,💂🏿‍♀️,💂🏾‍♀️,💂🏽‍♀️,💂🏼‍♀️,💂🏻‍♀️,💂‍♀️,💂🏿,💂🏾,💂🏽,💂🏼,💂🏻,💂,📢,✂️,👧🏿,👧🏾,👧🏽,👧🏼,👧🏻,👧,🎓,🇫🇷,⚾️,🚦,👩🏿,👩🏾,👩🏽,👩🏼,👩🏻,👩,🎆,🌠,🆘,🍄,😾,🛅,👠,🎯,🏊🏿‍♀️,🏊🏾‍♀️,🏊🏽‍♀️,🏊🏼‍♀️,🏊🏻‍♀️,🏊‍♀️,🏊🏿,🏊🏾,🏊🏽,🏊🏼,🏊🏻,🏊,🔑,👙,👪,✏️,🐘,💧,🌱,🍎,🆒,📞,💵,🏡,📖,💇🏿‍♂️,💇🏾‍♂️,💇🏽‍♂️,💇🏼‍♂️,💇🏻‍♂️,💇‍♂️,💇🏿,💇🏾,💇🏽,💇🏼,💇🏻,💇,💻,💡,❓,🔙,👦🏿,👦🏾,👦🏽,👦🏼,👦🏻,👦,🔐,🙎🏿‍♂️,🙎🏾‍♂️,🙎🏽‍♂️,🙎🏼‍♂️,🙎🏻‍♂️,🙎‍♂️,🙎🏿,🙎🏾,🙎🏽,🙎🏼,🙎🏻,🙎,🍊,↔️,🌅,🍗,🔵,🚘,🍧,🇮🇹,🐦,4️⃣,🇬🇧,🌛,👓,🐐,🌃,👵🏿,👵🏾,👵🏽,👵🏼,👵🏻,👵,⚫️,🌑,👬,⚪️,🛃,🐠,🏠,🔃,🌜,📍,🌕,👟,🍋,🍼,🎨,✉️,🍝,↘️,5️⃣,🎐,🍥,↗️,🌲,🆙,⬆️,🎭,👃🏿,👃🏾,👃🏽,👃🏼,👃🏻,👃,🐽,🐟,👳🏿‍♀️,👳🏾‍♀️,👳🏽‍♀️,👳🏼‍♀️,👳🏻‍♀️,👳‍♀️,👳🏿,👳🏾,👳🏽,👳🏼,👳🏻,👳,🐨,👂🏿,👂🏾,👂🏽,👂🏼,👂🏻,👂,✳️,🔹,🚿,↙️,🐛,🍜,🎩,👰🏿,👰🏾,👰🏽,👰🏼,👰🏻,👰,⛽️,🏁,🐴,⌚️,🐵,🚼,🆕,🆓,🎇,🌽,🎾,⏰,🔋,❕,🐺,🗿,🐮,📣,👴🏿,👴🏾,👴🏽,👴🏼,👴🏻,👴,👗,🔗,🐔,🍳,🐋,↖️,🌳,🍱,📌,🔜,🔁,🐉,🐹,⛳️,🏄🏿‍♀️,🏄🏾‍♀️,🏄🏽‍♀️,🏄🏼‍♀️,🏄🏻‍♀️,🏄‍♀️,🏄🏿,🏄🏾,🏄🏽,🏄🏼,🏄🏻,🏄,🐭,🌒,🚙,🅰️,⁉️,🈹,🔌,🌓,♋️,🔱,🍞,👮🏿‍♀️,👮🏾‍♀️,👮🏽‍♀️,👮🏼‍♀️,👮🏻‍♀️,👮‍♀️,👮🏿,👮🏾,👮🏽,👮🏼,👮🏻,👮,🍵,🎣,🌔,🚲,👤,🍚,📻,🐤,⤵️,🌘,↕️,🇪🇸,🌗,🔘,0️⃣,🐑,👱🏿‍♀️,👱🏾‍♀️,👱🏽‍♀️,👱🏼‍♀️,👱🏻‍♀️,👱‍♀️,👱🏿,👱🏾,👱🏽,👱🏼,👱🏻,👱,🌖,🔒,🍏,👺,➰,🚩,🔄,🐎,🍤,🌄,🌋,🐓,📥,💒,🍣,〰️,🍨,⏪,🍅,🐇,✴️,🔺,🔆,➕,👲🏿,👲🏾,👲🏽,👲🏼,👲🏻,👲,🏪,👥,🐞,🔻,🇩🇪,⤴️,📛,🛀🏿,🛀🏾,🛀🏽,🛀🏼,🛀🏻,🛀,⛔️,🐊,🌰,🐕,🐈,🔨,🍖,🐚,❇️,⛵️,6️⃣,🅱️,Ⓜ️,🐩,♒️,🍲,👖,🍯,🎹,🔓,✒️,🗽,💲,🏂,💮,👔,💠,♈️,🚺,🐜,♏️,🌇,⏳,🅾️,🐲,7️⃣,🐌,📀,👕,🎲,➖,🎎,♐️,🎱,🚌,🍮,🎌,〽️,🐫,🍛,🚂,🏥,🇯🇵,🔷,🎋,🔔,♌️,♊️,🍐,🔶,♉️,🌐,🚪,🕕,🚔,📩,🌂,🎷,⛪️,🚴🏿‍♀️,🚴🏾‍♀️,🚴🏽‍♀️,🚴🏼‍♀️,🚴🏻‍♀️,🚴‍♀️,🚴🏿,🚴🏾,🚴🏽,🚴🏼,🚴🏻,🚴,♓️,🍡,♑️,🏢,🚣🏿‍♀️,🚣🏾‍♀️,🚣🏽‍♀️,🚣🏼‍♀️,🚣🏻‍♀️,🚣‍♀️,🚣🏿,🚣🏾,🚣🏽,🚣🏼,🚣🏻,🚣,👒,👞,🏩,🗻,🐪,👜,⌛️,❎,🎺,🏫,🐄,🌆,👷🏿‍♀️,👷🏾‍♀️,👷🏽‍♀️,👷🏼‍♀️,👷🏻‍♀️,👷‍♀️,👷🏿,👷🏾,👷🏽,👷🏼,👷🏻,👷,🚽,🐖,❔,🔰,🎻,🔛,💳,🆔,㊙️,🎡,🎳,♎️,♍️,💈,👛,🎢,🐀,📅,🏉,🐏,🔼,🔲,📴,🗼,㊗️,👘,🇷🇺,🚢,🔎,🔍,🚒,🕦,🚓,🃏,🌉,📦,🚖,📆,🏇,🐅,8️⃣,👢,🚑,9️⃣,🔳,🐗,🎒,➿,💷,ℹ,🐂,🍙,🆚,🔚,🅿️,👡,⛺️,💺,🚕,◾️,💼,📰,🎪,🔯,🚹,🏰,🔦,🌁,⏫,🎍,🎫,🚁,💽,🚍,🍈,▫️,🏤,🔟,📓,🔕,🍢,🎏,🎠,🐡,📈,🍠,🎿,🕛,📶,🚧,#️⃣,◼️,📡,💶,👚,📒,🐆,🔅,🕒,🏬,🚚,🍶,🚃,🚤,🇰🇷,📼,🕐,⏬,🐃,🔽,💴,🔇,🎽,⬜️,♿️,🕑,📎,🏧,🎦,🔭,🎑,📘,◻️,📮,📧,🐁,🚄,🉐,🔩,🆖,🏨,🚾,🏮,🔂,📬,📉,📗,🚜,⛲️,🚇,📋,📵,🕓,🚭,⬛️,🎰,🕔,🛁,📜,🚉,🍘,🏦,🔧,🈯️,🚛,📄,⛎,📊,🚷,🇨🇳,📳,🕙,🕘,🚅,🚐,🚊,🕗,🈳,🚥,🚵🏿‍♀️,🚵🏾‍♀️,🚵🏽‍♀️,🚵🏼‍♀️,🚵🏻‍♀️,🚵‍♀️,🚵🏿,🚵🏾,🚵🏽,🚵🏼,🚵🏻,🚵,🔬,🏯,🔖,📑,👝,🆎,📃,🎴,🕚,📠,🕖,◽️,💱,🔉,💹,🆑,💾,🏣,🔈,🗾,🈺,🀄️,📨,📙,🚻,🈚️,🈶,📐,🚋,🈸,🚎,🈷️,🔢,📔,🈲,🈵,📯,🏭,🚸,🚆,📏,📟,🉑,🈴,🔏,🕜,🈂️,📤,🔀,📫,🚈,🕤,🚏,📂,📁,🚰,📇,🕝,🚝,🕧,🕥,🔤,📪,🕟,🚞,🚯,🕞,➗,🕢,🕠,🔠,📭,🔣,🚡,🕣,🕡,🔡,🚠,🈁,🛂,🚱,🚟,🛄,🚳,🏳️‍🌈,🕵🏿‍♀️,🕵🏾‍♀️,🕵🏽‍♀️,🕵🏼‍♀️,🕵🏻‍♀️,🕵️‍♀️,🕵🏿,🕵🏾,🕵🏽,🕵🏼,🕵🏻,☹️,☠️,🤗,🤖,🤕,🤔,🤓,🤒,🤑,🤐,🙄,🙃,🙂,🙁,🕵,🤘🏿,🤘🏾,🤘🏽,🤘🏼,🤘🏻,🖖🏿,🖖🏾,🖖🏽,🖖🏼,🖖🏻,🖕🏿,🖕🏾,🖕🏽,🖕🏼,🖕🏻,🖐🏿,🖐🏾,🖐🏽,🖐🏼,🖐🏻,✍🏿,✍🏾,✍🏽,✍🏼,✍🏻,🤘,✍️,🖖,🖕,🖐,🕶,👁‍🗨,👁,🏋🏿‍♀️,🏋🏾‍♀️,🏋🏽‍♀️,🏋🏼‍♀️,🏋🏻‍♀️,⛹🏿‍♀️,⛹🏾‍♀️,⛹🏽‍♀️,⛹🏼‍♀️,⛹🏻‍♀️,🏌️‍♀️,🏋️‍♀️,⛹️‍♀️,🏋🏿,🏋🏾,🏋🏽,🏋🏼,🏋🏻,⛹🏿,⛹🏾,⛹🏽,⛹🏼,⛹🏻,🕴,🏌,🏋,*️⃣,❣️,✡️,✝️,⚜️,⚛️,☸️,☯️,☮️,☪️,☦️,☣️,☢️,🛐,🗯,🕎,🕉,⚱️,⚰️,⚙️,⚗️,⚖️,⚔️,⌨️,🛢,🛡,🛠,🛏,🛎,🛍,🛌,🛋,🗳,🗡,🗞,🗝,🗜,🗓,🗒,🗑,🗄,🗃,🗂,🖼,🖲,🖱,🖨,🖥,🖍,🖌,🖋,🖊,🖇,🕹,🕳,🕰,🕯,📿,📽,📸,🏺,🏷,🏴,🏳,🎞,🎛,🎚,🎙,🌡,🛳,🛰,🛬,🛫,🛩,🛥,🛤,🛣,🗺,🕍,🕌,🕋,🏟,🏞,🏝,🏜,🏛,🏚,🏙,🏘,🏗,🏖,🏕,🏔,🏎,🏍,🏹,🏸,🏵,🏓,🏒,🏑,🏐,🏏,🏅,🎟,🎗,🎖,🧀,🍿,🍾,🍽,🌶,🌯,🌮,🌭,☘️,☄️,☃️,☂️,🦄,🦃,🦂,🦁,🦀,🕸,🕷,🕊,🐿,🌬,🌫,🌪,🌩,🌨,🌧,🌦,🌥,🌤,🗣,⏺,⏹,⏸,⏯,⏮,⏭,⛱,⛓,⛏,⚒,⏲,⏱,⛴,⛰,⛩,⛹,⛸,⛷,⛈,⛑,🇿🇼,🇿🇲,🇿🇦,🇾🇹,🇾🇪,🇽🇰,🇼🇸,🇼🇫,🇻🇺,🇻🇳,🇻🇮,🇻🇬,🇻🇪,🇻🇨,🇻🇦,🇺🇿,🇺🇾,🇺🇬,🇺🇦,🇹🇿,🇹🇼,🇹🇻,🇹🇹,🇹🇷,🇹🇴,🇹🇳,🇹🇲,🇹🇱,🇹🇰,🇹🇯,🇹🇭,🇹🇬,🇹🇫,🇹🇩,🇹🇨,🇸🇿,🇸🇾,🇸🇽,🇸🇻,🇸🇹,🇸🇸,🇸🇷,🇸🇴,🇸🇳,🇸🇲,🇸🇱,🇸🇰,🇸🇮,🇸🇭,🇸🇬,🇸🇪,🇸🇩,🇸🇨,🇸🇧,🇸🇦,🇷🇼,🇷🇸,🇷🇴,🇷🇪,🇶🇦,🇵🇾,🇵🇼,🇵🇹,🇵🇸,🇵🇷,🇵🇳,🇵🇲,🇵🇱,🇵🇰,🇵🇭,🇵🇬,🇵🇫,🇵🇪,🇵🇦,🇴🇲,🇳🇿,🇳🇺,🇳🇷,🇳🇵,🇳🇴,🇳🇱,🇳🇮,🇳🇬,🇳🇫,🇳🇪,🇳🇨,🇳🇦,🇲🇿,🇲🇾,🇲🇽,🇲🇼,🇲🇻,🇲🇺,🇲🇹,🇲🇸,🇲🇷,🇲🇶,🇲🇵,🇲🇴,🇲🇳,🇲🇲,🇲🇱,🇲🇰,🇲🇭,🇲🇬,🇲🇪,🇲🇩,🇲🇨,🇲🇦,🇱🇾,🇱🇻,🇱🇺,🇱🇹,🇱🇸,🇱🇷,🇱🇰,🇱🇮,🇱🇨,🇱🇧,🇱🇦,🇰🇿,🇰🇾,🇰🇼,🇰🇵,🇰🇳,🇰🇲,🇰🇮,🇰🇭,🇰🇬,🇰🇪,🇯🇴,🇯🇲,🇯🇪,🇮🇸,🇮🇷,🇮🇶,🇮🇴,🇮🇳,🇮🇲,🇮🇱,🇮🇪,🇮🇩,🇮🇨,🇭🇺,🇭🇹,🇭🇷,🇭🇳,🇭🇰,🇬🇾,🇬🇼,🇬🇺,🇬🇹,🇬🇸,🇬🇷,🇬🇶,🇬🇵,🇬🇳,🇬🇲,🇬🇱,🇬🇮,🇬🇭,🇬🇬,🇬🇫,🇬🇪,🇬🇩,🇬🇦,🇫🇴,🇫🇲,🇫🇰,🇫🇯,🇫🇮,🇪🇺,🇪🇹,🇪🇷,🇪🇭,🇪🇬,🇪🇪,🇪🇨,🇩🇿,🇩🇴,🇩🇲,🇩🇰,🇩🇯,🇨🇿,🇨🇾,🇨🇽,🇨🇼,🇨🇻,🇨🇺,🇨🇷,🇨🇴,🇨🇲,🇨🇱,🇨🇰,🇨🇮,🇨🇭,🇨🇬,🇨🇫,🇨🇩,🇨🇨,🇨🇦,🇧🇿,🇧🇾,🇧🇼,🇧🇹,🇧🇸,🇧🇷,🇧🇶,🇧🇴,🇧🇳,🇧🇲,🇧🇱,🇧🇯,🇧🇮,🇧🇭,🇧🇬,🇧🇫,🇧🇪,🇧🇩,🇧🇧,🇧🇦,🇦🇿,🇦🇽,🇦🇼,🇦🇺,🇦🇹,🇦🇸,🇦🇷,🇦🇶,🇦🇴,🇦🇲,🇦🇱,🇦🇮,🇦🇬,🇦🇫,🇦🇪,🇦🇩'.split(',');
  var regxArr = emojis.map(function (currentValue) {
    return toSurrogatePairs(currentValue);
  });

  var re = new RegExp('(' + regxArr.join('|') + ')', 'g');

  return txt.replace(re, function (match, p1) {
    return '<img class="emoji" alt="' + p1 + '" src="/apple40/' + toCodePoint(noExtra(p1)) + '.png" />';
  });
};

/***/ })
/******/ ]);
});